/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'jacoco'
    id 'com.github.spotbugs' version '4.7.0'
    id 'checkstyle'
    id 'pmd'

}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
}

spotbugs {
	ignoreFailures = true
	spotbugsTest.enabled = false
	}

checkstyle {
    toolVersion '6.16.1'
    config = rootProject.resources.text.fromFile('etc/checkstyle/rules.xml')
    ignoreFailures = true
    checkstyleTest.enabled = false
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}

pmd {
	toolVersion '6.0.0'
	ruleSetConfig = rootProject.resources.text.fromFile('etc/pmd/ruleset.xml')
  	ignoreFailures = true
  	consoleOutput = true
  	pmdTest.enabled = false
    rulesMinimumPriority = 5
    ruleSets = ["category/java/errorprone.xml",
                "category/java/bestpractices.xml",
                "category/java/codestyle.xml",
                "category/java/documentation.xml",
                "category/java/security.xml"
                ]
}

